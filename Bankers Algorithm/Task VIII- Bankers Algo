#include<stdio.h>


void main()
{
	int allocation[10][5],max[10][5],need[10][5],available[3],flag[10],sq[10];
	int n,r,i,j,k,count,count1=0;
	printf("\n Enter the number of processes running :");
	scanf("%d",&n);
	for(i=0;i<10;i++)
		flag[i]=0;
	printf("\n Enter the number of resources (<5) :");
	scanf("%d",&r);
	printf("\n Input the allocation matrix for the processes in row major order..\n");
	for(i=0;i<n;i++)
	{
      		for(j=0;j<r;j++)
    		{
       			 scanf("%d",&allocation[i][j]);
   		}
	}
	printf("\n Enter the no. of maximum resources matrix\n");
	for(i=0;i<n;i++)
	{
    		for(j=0;j<r;j++)
   		{
       	   		scanf("%d",&max[i][j]);
   		}
	}	
	printf("\n Enter the no. of available instances:\n");
	for(i=0;i<r;i++)
	{
      		scanf("%d",&available[i]);
	}
	printf("\n The need matrix is as follows : \n");
	for(i=0;i<n;i++)
	{
    		for(j=0;j<r;j++)
    		{
        		need[i][j]= max[i][j]-allocation[i][j];
        		printf("\t %d",need[i][j]);
    		}
    		printf("\n");
	}
	do{
  		for(k=0;k<n;k++)
  		{
    			for(i=0;i<n;i++)
     			{
          			if(flag[i]==0)
          			{
            				count=0;
            				for(j=0;j<r;j++)
            				{
               					if(available[j]>=need[i][j])
               					count++;
            				}
            				if(count==r)
            				{
               					count1++;
               					flag[i]=1;
              					sq[count1-1]=i;
               					for(j=0;j<r;j++)
             					{
                   					available[j]=available[j]+allocation[i][j];
              					}
              					break;
            				}
         			}
     			}
  		}
  		if(count1!=n)
  		{
    			 printf("\n---------------IT'S AN UNSAFE STATE---------------");
     			 break;
 		}
	}while(count1!=n);
	if(count1==n)
	{
   		printf("\n *******************IT'S A SAFE STATE*******************");
   		printf("\n The safe sequence is....\n");
   		for(i=0;i<n;i++)
       		printf("\t P%d",sq[i]);
  		printf("\n");
   		printf("\n The available matrix is now : ");
   		for(i=0;i<r;i++)
      			 printf("\t %d",available[i]);
	}
	printf("\n");
}

/*
OUTPUT
 Enter the number of processes running :3

 Enter the number of resources (<5) :3

 Input the allocation matrix for the processes in row major order..
1 1 0
2 0 1
0 1 0

 Enter the no. of maximum resources matrix
2 1 1
2 1 1
1 2 0

 Enter the no. of available instances:
3 2 1

 The need matrix is as follows : 
	 1	 0	 1
	 0	 1	 0
	 1	 1	 0

 *******************IT'S A SAFE STATE*******************
 The safe sequence is....
	 P0	 P1	 P2

 The available matrix is now : 	 6	 4	 2
*/
